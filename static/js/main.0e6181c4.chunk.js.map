{"version":3,"sources":["redux/actions/phonebookActions.js","redux/reducers/phonebookReducer.js","redux/reducers/rootReducer.js","redux/store.js","components/notification/NotificationStyled.js","components/notification/Notification.js","components/contactForm/ContactFormStyled.js","components/contactForm/ContactForm.js","components/contactList/ContactListStyled.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/AppStyled.js","components/App.js","index.js"],"names":["addContact","createAction","name","number","payload","contact","id","uuidv4","deleteContact","setFilter","getContacts","items","createReducer","state","action","filter","item","phonebookReducer","combineReducers","rootReducer","contacts","store","configureStore","reducer","NotifWrap","styled","div","Notification","message","Form","form","Input","input","Button","button","initialState","alert","connect","dispatch","useState","setState","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","handleChange","e","target","value","prevState","onSubmit","preventDefault","alertMessage","some","cont","toLowerCase","type","placeholder","onChange","CSSTransition","in","classNames","onEntered","timeout","unmountOnExit","Wrapper","DelButton","ContactListItem","onDeleteContact","data-id","onClick","includes","handleDeleteContact","dataset","TransitionGroup","component","map","FilterWrapper","FilterInput","Container","appear","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e6181c4.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// ========= redux toolkit ===========================\r\n\r\nexport const addContact = createAction(\r\n  \"phonebook/addNewContact\",\r\n  (name, number) => ({\r\n    payload: {\r\n      contact: { name, number, id: uuidv4() },\r\n    },\r\n  })\r\n);\r\n\r\nexport const deleteContact = createAction(\"phonebook/deleteContact\")\r\nexport const setFilter = createAction(\"phonebook/setFilter\")\r\nexport const getContacts = createAction(\"phonebook/getContacts\")\r\n\r\n\r\n// // ========= pure redux ===========================\r\n\r\n// import { ADD_CONTACT, DELETE_CONTACT, SET_FILTER } from \"../PhonebookConstants\";\r\n\r\n// export const addContact = (name, number) => ({\r\n//   type: ADD_CONTACT,\r\n//   payload: {\r\n//     contact:{name, number, id:uuidv4() },\r\n//   },\r\n// });\r\n\r\n// export const deleteContact = (id) => ({\r\n//   type: DELETE_CONTACT,\r\n//   payload: {\r\n//     id,\r\n//   },\r\n// });\r\n\r\n// export const setFilter = (value) => ({\r\n//   type: SET_FILTER,\r\n//   payload: {\r\n//     value,\r\n//   },\r\n// });\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  getContacts,\r\n  setFilter,\r\n} from \"../actions/phonebookActions\";\r\n\r\n// ========== redux toolkit ============================\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, action) => [...state, action.payload.contact],\r\n  [deleteContact]: (state, action) => [\r\n    ...state.filter((item) => item.id !== action.payload),\r\n  ],\r\n  [getContacts]:(state, action) =>[...action.payload],\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [setFilter]: (state, action) => action.payload,\r\n});\r\n\r\n\r\nconst phonebookReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default phonebookReducer;\r\n\r\n// ============ combineReducers ===================================\r\n\r\n// import { ADD_CONTACT, DELETE_CONTACT } from \"../PhonebookConstants\";\r\n\r\n// const itemsReducer = (state = [], action) => {\r\n//   switch (action.type) {\r\n//     case ADD_CONTACT:\r\n//       return [...state, action.payload.contact];\r\n\r\n//     case DELETE_CONTACT:\r\n//       return [...state.filter((item) => item.id !== action.payload.id)];\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReducer = (state = \"\", action) => {\r\n//   switch (action.type) {\r\n//     case SET_FILTER:\r\n//       return action.payload.value ;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const phonebookReducer = combineReducers({\r\n//   items: itemsReducer,\r\n//   filter: filterReducer,\r\n// });\r\n\r\n// export default phonebookReducer;\r\n\r\n// // =========== phonebookReducer pure redux =======================================\r\n\r\n// import { ADD_CONTACT, DELETE_CONTACT, SET_FILTER } from \"../PhonebookConstants\";\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: \"\",\r\n//   },\r\n// };\r\n\r\n// const phonebookReducer = (state = { ...initialState }, action) => {\r\n//   switch (action.type) {\r\n//     case ADD_CONTACT:\r\n//       return {\r\n//         ...state,\r\n//         contacts: {\r\n//           ...state.contacts,\r\n//           items: [...state.contacts.items, action.payload.contact],\r\n//         },\r\n//       };\r\n\r\n//     case DELETE_CONTACT:\r\n//       return {\r\n//         ...state,\r\n//         contacts: {\r\n//           ...state.contacts,\r\n//           items: [\r\n//             ...state.contacts.items.filter(\r\n//               (item) => item.id !== action.payload.id\r\n//             ),\r\n//           ],\r\n//           filter: \"\",\r\n//         },\r\n//       };\r\n\r\n//     case SET_FILTER:\r\n//       return {\r\n//         ...state,\r\n//         contacts: { ...state.contacts, filter: action.payload.value },\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default phonebookReducer\r\n","import { combineReducers } from \"redux\";\r\nimport phonebookReducer from \"./phonebookReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phonebookReducer,\r\n});\r\n\r\nexport default rootReducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\n// ====== redux toolkit ==============================\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nexport default store;\r\n\r\n// // ===================================================\r\n\r\n//  const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n//  export default store;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NotifWrap = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  background-color: #F1392D;\r\n  color: #fff;\r\n  font-size: 20px;\r\n  padding: 20px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n  border-radius:5px;\r\n`;\r\n","import React from \"react\";\r\nimport { NotifWrap } from \"./NotificationStyled\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <NotifWrap>\r\n    <p>{message}</p>\r\n  </NotifWrap>\r\n);\r\n\r\nexport default Notification;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n  margin: 30px 0;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 10px;\r\n  margin: 5px 0 20px 0;\r\n  width: 100%;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  outline-color: #3645ab;\r\n\r\n  &::placeholder {\r\n    font-size: 14px;\r\n    color: #d8d8d8;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  background-color: #3645ab;\r\n\r\n    &:hover {\r\n    background-color: #273aba;\r\n    color: white;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact, getContacts } from \"../../redux/actions/phonebookActions\";\r\nimport Notification from \"../notification/Notification\";\r\nimport { Form, Input, Button } from \"./ContactFormStyled\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n  alert: false,\r\n};\r\n\r\nconst ContactForm = ({ contacts, addContact, getContacts }) => {\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"contacts\")) {\r\n      const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n      getContacts(contacts);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = state;\r\n\r\n    if (!name || !number) {\r\n      return setState((prevState) => ({\r\n        ...prevState,\r\n        alert: true,\r\n        alertMessage: \"Please enter some contact information.\",\r\n      }));\r\n    }\r\n\r\n    contacts.some((cont) => cont.name.toLowerCase() === name.toLowerCase())\r\n      ? setState((prevState) => ({\r\n          ...prevState,\r\n          alert: true,\r\n          alertMessage: `${name} is already in contacts!`,\r\n        }))\r\n      : addContact(name, number);\r\n\r\n    setState((prevState) => ({ ...prevState, name: \"\", number: \"\" }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <label>\r\n          Name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={state.name}\r\n            placeholder=\"Enter your name\"\r\n            onChange={handleChange}\r\n          ></Input>\r\n        </label>\r\n        <label>\r\n          Number\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={state.number}\r\n            placeholder=\"123-45-678\"\r\n            onChange={handleChange}\r\n          ></Input>\r\n        </label>\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n      <CSSTransition\r\n        in={state.alert}\r\n        classNames=\"Notification\"\r\n        onEntered={() =>\r\n          setState((prevState) => ({ ...prevState, alert: false }))\r\n        }\r\n        timeout={3000}\r\n        unmountOnExit\r\n      >\r\n        <Notification message={state.alertMessage} />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addContact: (name, number) => {\r\n      dispatch(addContact(name, number));\r\n    },\r\n    getContacts: (contacts) => {\r\n      dispatch(getContacts(contacts));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"../contactForm/ContactFormStyled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px 15px;\r\n    background-color: white;\r\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n    border-radius: 3px;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n\r\n  .ContactList-item-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n\r\n  .ContactList-item-enter-active {\r\n    opacity: 1;\r\n    transform:translateX(0);\r\n    transition: all 250ms linear;\r\n  }\r\n\r\n  .ContactList-item-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n\r\n  .ContactList-item-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n    transition: all 250ms linear;\r\n  }\r\n`;\r\n\r\nexport const DelButton = styled(Button)`\r\n  width:35px;\r\n  height:35px;\r\n  font-size: 20px;\r\n  background-color:#F1392D;\r\n  line-height: 17px;\r\n\r\n  &:hover{\r\n    background-color:#d71b0e\r\n  }\r\n`;\r\n\r\n","import React from \"react\";\r\nimport {DelButton} from \"../ContactListStyled\"\r\n\r\nconst ContactListItem = ({ contact:{id, name, number}, onDeleteContact}) => (\r\n  <li>\r\n    <p>\r\n      {name}: {number}\r\n    </p>\r\n    <DelButton type=\"button\" data-id={id} onClick={onDeleteContact}>&times;</DelButton>\r\n  </li>\r\n);\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\nimport { deleteContact, setFilter } from \"../../redux/actions/phonebookActions\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { Wrapper } from \"./ContactListStyled\";\r\n\r\nconst ContactList = ({ contacts, deleteContact, setFilter }) => {\r\n\r\n  const handleDeleteContact = (e) => {\r\n    const { id } = e.target.dataset;\r\n    deleteContact(id);\r\n    setFilter(\"\");\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <TransitionGroup component=\"ul\">\r\n        {contacts.map((contact) => (\r\n          <CSSTransition\r\n            key={contact.id}\r\n            timeout={250}\r\n            classNames=\"ContactList-item\"\r\n          >\r\n            <ContactListItem\r\n              contact={contact}\r\n              onDeleteContact={handleDeleteContact}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.items.filter((item) =>\r\n      item.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n    ),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteContact: (id) => {\r\n      dispatch(deleteContact(id));\r\n    },\r\n    setFilter: (value) => {\r\n      dispatch(setFilter(value));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\n\r\n","import styled from \"styled-components\";\r\nimport { Input } from \"../contactForm/ContactFormStyled\";\r\n\r\nexport const FilterWrapper = styled.div`\r\n  margin: 0 0 30px ;\r\n  padding: 5px 20px 10px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n`;\r\n\r\nexport const FilterInput = styled(Input)`\r\n  margin: 5px 0 0;\r\n`;\r\n\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/actions/phonebookActions\";\r\nimport { FilterWrapper, FilterInput} from \"./FilterStyled\"\r\n\r\nconst Filter = ({ value, setFilter }) => {\r\n\r\n  const handleChange =(e)=>{\r\n    const {value} = e.target\r\n    setFilter(value);\r\n  }\r\n\r\n  return (\r\n    <FilterWrapper>\r\n      <label>\r\n        Find contacts by name\r\n      <FilterInput\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        placeholder=\"Search...\"\r\n      ></FilterInput>\r\n      </label>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    value: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFilter: (value) => {\r\n      dispatch(setFilter(value));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 50%;\r\n  margin: 0 auto;\r\n\r\n  h1 {\r\n    color: #3645ab;\r\n  }\r\n\r\n  .phonebook-title-appear {\r\n    transform: translateX(-100%);\r\n  }\r\n  .phonebook-title-appear-active {\r\n    transform: translateX(0);\r\n    transition: transform 500ms linear;\r\n  }\r\n\r\n\r\n  .filter-enter {\r\n    opacity: 0;\r\n    transform: scale(0.1);\r\n  }\r\n\r\n  .filter-enter-active {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n    transition: all 500ms linear;\r\n  }\r\n\r\n  .filter-exit {\r\n    opacity: 1;\r\n    transform: scale(0.1);\r\n  }\r\n\r\n  .filter-exit-active {\r\n    opacity: 0;\r\n    transform: scale(0);\r\n    transition: all 500ms linear;\r\n  }\r\n\r\n\r\n  .Notification-enter {\r\n    transform: translateX(100%);\r\n  }\r\n\r\n  .Notification-enter-active {\r\n    transform: translateX(0);\r\n    transition: transform 250ms linear;\r\n  }\r\n\r\n  .Notification-exit {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  .Notification-exit-active {\r\n    transform: translateX(300%);\r\n    transition: transform 250ms linear;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Container } from \"./AppStyled\";\n\nconst App = ({ contacts }) => {\n\n  return (\n    <Container>\n      <CSSTransition\n        in={true}\n        appear={true}\n        classNames=\"phonebook-title\"\n        timeout={500}\n        unmountOnExit\n      >\n        <h1>Phonebook</h1>\n      </CSSTransition>\n\n      <ContactForm />\n\n      <CSSTransition\n        in={contacts.length > 1}\n        classNames=\"filter\"\n        timeout={500}\n        unmountOnExit\n      >\n        <Filter />\n      </CSSTransition>\n\n      <ContactList />\n\n      {!contacts.length && <p>There are no contacts in current list.</p>}\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contacts.items,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./components/App\";\nimport \"./base.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}